# Helix Languages Configuration
# Documentation: https://docs.helix-editor.com/languages.html

# Python configuration
[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyx"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["pylsp", "ruff"]
indent = { tab-width = 4, unit = "    " }
auto-format = true

[language-server.pylsp]
command = "pylsp"

[language-server.ruff]
command = "ruff-lsp"

# JavaScript/TypeScript configuration
[[language]]
name = "javascript"
scope = "source.js"
injection-regex = "(js|javascript)"
file-types = ["js", "jsx", "mjs", "cjs"]
roots = ["package.json", "tsconfig.json", "jsconfig.json", ".git"]
comment-token = "//"
language-servers = ["typescript-language-server"]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[[language]]
name = "typescript"
scope = "source.ts"
injection-regex = "(ts|typescript)"
file-types = ["ts", "tsx", "mts", "cts"]
roots = ["package.json", "tsconfig.json", ".git"]
comment-token = "//"
language-servers = ["typescript-language-server"]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]

# Rust configuration
[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
comment-token = "//"
language-servers = ["rust-analyzer"]
indent = { tab-width = 4, unit = "    " }
auto-format = true

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
check.command = "clippy"

# Go configuration
[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.mod", "go.sum", ".git"]
comment-token = "//"
language-servers = ["gopls"]
indent = { tab-width = 4, unit = "\t" }
auto-format = true

[language-server.gopls]
command = "gopls"

# JSON configuration
[[language]]
name = "json"
scope = "source.json"
injection-regex = "json"
file-types = ["json", "jsonc", "arb", "ipynb", "geojson"]
roots = []
comment-token = "//"
language-servers = ["vscode-json-language-server"]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[language-server.vscode-json-language-server]
command = "vscode-json-language-server"
args = ["--stdio"]

# YAML configuration
[[language]]
name = "yaml"
scope = "source.yaml"
injection-regex = "ya?ml"
file-types = ["yml", "yaml"]
roots = []
comment-token = "#"
language-servers = ["yaml-language-server"]
indent = { tab-width = 2, unit = "  " }

[language-server.yaml-language-server]
command = "yaml-language-server"
args = ["--stdio"]

# TOML configuration
[[language]]
name = "toml"
scope = "source.toml"
injection-regex = "toml"
file-types = ["toml", "poetry.lock", "Cargo.lock"]
roots = []
comment-token = "#"
language-servers = ["taplo"]
indent = { tab-width = 2, unit = "  " }

[language-server.taplo]
command = "taplo"
args = ["lsp", "stdio"]

# Markdown configuration
[[language]]
name = "markdown"
scope = "source.md"
injection-regex = "md|markdown"
file-types = ["md", "markdown", "mkd", "mdwn", "mdown", "markdn", "mdtxt", "mdtext", "workbook"]
roots = []
comment-token = "<!--"
language-servers = ["marksman"]
indent = { tab-width = 2, unit = "  " }

[language-server.marksman]
command = "marksman"
args = ["server"]

# Shell/Bash configuration
[[language]]
name = "bash"
scope = "source.bash"
injection-regex = "(shell|bash|sh|zsh)"
file-types = ["sh", "bash", "zsh", ".bashrc", ".bash_profile", ".zshrc", ".zshenv", ".zprofile"]
roots = []
comment-token = "#"
language-servers = ["bash-language-server"]
indent = { tab-width = 2, unit = "  " }

[language-server.bash-language-server]
command = "bash-language-server"
args = ["start"]

# HTML configuration
[[language]]
name = "html"
scope = "text.html.basic"
injection-regex = "html"
file-types = ["html", "htm", "shtml", "xhtml", "xht", "jsp", "asp", "aspx", "jshtm", "volt", "rhtml"]
roots = []
comment-token = "<!--"
language-servers = ["vscode-html-language-server"]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[language-server.vscode-html-language-server]
command = "vscode-html-language-server"
args = ["--stdio"]

# CSS configuration
[[language]]
name = "css"
scope = "source.css"
injection-regex = "css"
file-types = ["css", "scss", "sass", "less"]
roots = []
comment-token = "//"
language-servers = ["vscode-css-language-server"]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[language-server.vscode-css-language-server]
command = "vscode-css-language-server"
args = ["--stdio"]